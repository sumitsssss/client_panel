[{"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/index.js":"1","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/store.js":"2","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/layout/Dashboard.jsx":"3","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/layout/Sidebar.jsx":"4","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/firebase.js":"5","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Globals.styles.js":"6","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/actions/clientActions.js":"7","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/reducer/clientReducer.js":"8","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/actionTypes.js":"9","/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/client/Clients.jsx":"10"},{"size":622,"mtime":1610378858439,"results":"11","hashOfConfig":"12"},{"size":363,"mtime":1610479338208,"results":"13","hashOfConfig":"12"},{"size":479,"mtime":1610295276085,"results":"14","hashOfConfig":"12"},{"size":680,"mtime":1610301251523,"results":"15","hashOfConfig":"12"},{"size":543,"mtime":1610379265609,"results":"16","hashOfConfig":"12"},{"size":523,"mtime":1610301925798,"results":"17","hashOfConfig":"12"},{"size":392,"mtime":1610481054824,"results":"18","hashOfConfig":"12"},{"size":346,"mtime":1610481184052,"results":"19","hashOfConfig":"12"},{"size":45,"mtime":1610480055550,"results":"20","hashOfConfig":"12"},{"size":3547,"mtime":1610481157103,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13nzqgj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/index.js",[],["44","45"],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/store.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/layout/Dashboard.jsx",["46"],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/layout/Sidebar.jsx",["47","48"],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/firebase.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Globals.styles.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/actions/clientActions.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/reducer/clientReducer.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/Redux/actionTypes.js",[],"/media/sumit/New Volume/Web Development/#7 Days Code Sprint/Client-Panel/client_panel/src/components/client/Clients.jsx",["49"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Grid, makeStyles, withStyles, Button } from \"@material-ui/core\";\r\nimport React, { useEffect } from \"react\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\n// import TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport GlobalStyles from \"../../Globals.styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchClients } from \"../../Redux/actions/clientActions\";\r\n\r\n\r\nconst Clients = ({ clients, fetchClients }) => {\r\n  const globalClass = GlobalStyles();\r\n  useEffect(()=>{\r\n    fetchClients()\r\n  },[])\r\n\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 16,\r\n    },\r\n  }))(TableCell);\r\n  const StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }))(TableRow);\r\n  const useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 600,\r\n    },\r\n  });\r\n\r\n  console.log(clients);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={6} className={classes.flex}>\r\n          <h2 style={{ textAlign: \"left\" }}>\r\n            <PeopleIcon /> Clients\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={6}></Grid>\r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Name</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>Balance</StyledTableCell>\r\n              <StyledTableCell></StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {clients.map((client) => {\r\n              return (\r\n                <StyledTableRow key={client.id}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {client.firstName} {client.lastName}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell>{client.email}</StyledTableCell>\r\n                  <StyledTableCell>{client.balance}</StyledTableCell>\r\n                  <StyledTableCell>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      startIcon={<ArrowRightAltIcon />}\r\n                    >\r\n                      <Link to=\"/clients\" className={globalClass.links}>\r\n                        Details\r\n                      </Link>\r\n                    </Button>\r\n                  </StyledTableCell>\r\n                </StyledTableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  clients: state.client.clients,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {fetchClients})(Clients);\r\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":8,"column":9,"nodeType":"56","messageId":"57","endLine":8,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":20},{"ruleId":"54","severity":1,"message":"60","line":16,"column":8,"nodeType":"56","messageId":"57","endLine":16,"endColumn":24},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'CircularProgress' is defined but never used.","no-global-assign","no-unsafe-negation"]